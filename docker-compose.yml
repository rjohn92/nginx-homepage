version: '3.8'
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    environment:
      - NGINX_SERVER_NAME=${NGINX_SERVER_NAME}
      - CONTAINERS_LOCATION=${CONTAINERS_LOCATION}
    ports:
      - "80:80" # HTTP for Let's Encrypt challenge
      - "443:443" # HTTPS for secure access
    volumes:
      - ./webpage:/usr/share/nginx/html  # Mount your webpage to the HTML directory
      - ./config/nginx.conf:/etc/nginx/nginx.conf  # Main Nginx configuration
      - ./config/snippets:/etc/nginx/config/snippets  # Mount the snippets directory
      - ./config/upstreams:/etc/nginx/config/upstreams
      - ./config/locations:/etc/nginx/config/locations
     # - ./ssl:/etc/nginx/ssl # certificate location
      - ./certs:/etc/letsencrypt # Certbot certificates
      - ../fail2ban/remotelogs/nginx:/var/log/nginx

    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mediamanagement_default
      - plex_default
      - portainer_network
      - network-map_default
      - pihole_default
      - bibliomane_default
      - nginx-proxy_default
      - keycloak_oauth2_network

  certbot:
    image: certbot/certbot
    container_name: certbot
    depends_on:
      nginx:
        condition: service_healthy
    volumes:
      - ./certs:/etc/letsencrypt
      - ./webpage:/usr/share/nginx/html
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /usr/share/nginx/html --quiet && sleep 12h & wait $${!}; done'"
    restart: unless-stopped
    networks:
      - nginx-proxy_default


networks:
  mediamanagement_default:
    external: true
  plex_default:
    external: true
  portainer_network:
    external: true
  network-map_default:
    external: true
  pihole_default:
    external: true
  bibliomane_default:
    external: true
  nginx-proxy_default:
    external: true
  keycloak_oauth2_network:
    external: true